{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramda\\\\Documents\\\\Projects\\\\rakugaki\\\\rakugaki_app\\\\src\\\\Components\\\\loadingscreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { TimelineMax, Back } from \"gsap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Loadingscreen() {\n  _s();\n  const titleRef = useRef(null);\n  const buttonRef = useRef(null);\n  useEffect(() => {\n    const titleLetters = titleRef.current.children;\n    const buttonLetters = buttonRef.current.children;\n\n    // Animating letters with GSAP\n    const title1 = new TimelineMax();\n    title1.to(buttonRef.current, 0, {\n      visibility: \"hidden\",\n      opacity: 0\n    });\n    title1.staggerFromTo(titleLetters, 0.5, {\n      ease: Back.easeOut.config(1.7),\n      opacity: 0,\n      bottom: -80\n    }, {\n      ease: Back.easeOut.config(1.7),\n      opacity: 1,\n      bottom: 0\n    }, 0.05);\n    title1.to(buttonRef.current, 0.2, {\n      visibility: \"visible\",\n      opacity: 1\n    });\n\n    // Hiding button on click\n    function handleButtonClick() {\n      buttonRef.current.style.display = \"none\";\n    }\n\n    // Setting up event listeners\n    titleRef.current.addEventListener(\"animationend\", () => {\n      buttonRef.current.style.display = \"block\";\n    });\n    buttonRef.current.addEventListener(\"click\", handleButtonClick);\n\n    // Cleaning up event listeners\n    return () => {\n      titleRef.current.removeEventListener(\"animationend\");\n      buttonRef.current.removeEventListener(\"click\", handleButtonClick);\n    };\n  }, []);\n  function animateLoading() {\n    document.getElementById(\"loadingscreen\").style.transform = \"translateX(-200vw)\";\n  }\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      animateLoading();\n    }, 2000);\n    return () => clearTimeout(timeoutId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loadingscreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ref: titleRef,\n      className: \"title\",\n      children: \"This is\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: titleRef,\n      className: \"title\",\n      children: \"a long\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: titleRef,\n      className: \"title\",\n      children: \"long title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: buttonRef,\n      className: \"button\",\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Loadingscreen, \"O0M9+aGZy2R79SyaSiMbSqFiGzk=\");\n_c = Loadingscreen;\nexport default Loadingscreen;\nvar _c;\n$RefreshReg$(_c, \"Loadingscreen\");","map":{"version":3,"names":["React","useEffect","useRef","TimelineMax","Back","Loadingscreen","titleRef","buttonRef","titleLetters","current","children","buttonLetters","title1","to","visibility","opacity","staggerFromTo","ease","easeOut","config","bottom","handleButtonClick","style","display","addEventListener","removeEventListener","animateLoading","document","getElementById","transform","timeoutId","setTimeout","clearTimeout"],"sources":["C:/Users/ramda/Documents/Projects/rakugaki/rakugaki_app/src/Components/loadingscreen.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { TimelineMax, Back } from \"gsap\";\r\n\r\nfunction Loadingscreen() {\r\n  const titleRef = useRef(null);\r\n  const buttonRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const titleLetters = titleRef.current.children;\r\n    const buttonLetters = buttonRef.current.children;\r\n\r\n    // Animating letters with GSAP\r\n    const title1 = new TimelineMax();\r\n    title1.to(buttonRef.current, 0, { visibility: \"hidden\", opacity: 0 });\r\n    title1.staggerFromTo(\r\n      titleLetters,\r\n      0.5,\r\n      {\r\n        ease: Back.easeOut.config(1.7),\r\n        opacity: 0,\r\n        bottom: -80,\r\n      },\r\n      {\r\n        ease: Back.easeOut.config(1.7),\r\n        opacity: 1,\r\n        bottom: 0,\r\n      },\r\n      0.05\r\n    );\r\n    title1.to(buttonRef.current, 0.2, { visibility: \"visible\", opacity: 1 });\r\n\r\n    // Hiding button on click\r\n    function handleButtonClick() {\r\n      buttonRef.current.style.display = \"none\";\r\n    }\r\n\r\n    // Setting up event listeners\r\n    titleRef.current.addEventListener(\"animationend\", () => {\r\n      buttonRef.current.style.display = \"block\";\r\n    });\r\n    buttonRef.current.addEventListener(\"click\", handleButtonClick);\r\n\r\n    // Cleaning up event listeners\r\n    return () => {\r\n      titleRef.current.removeEventListener(\"animationend\");\r\n      buttonRef.current.removeEventListener(\"click\", handleButtonClick);\r\n    };\r\n  }, []);\r\n\r\n  function animateLoading() {\r\n    document.getElementById(\"loadingscreen\").style.transform =\r\n      \"translateX(-200vw)\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      animateLoading();\r\n    }, 2000);\r\n    return () => clearTimeout(timeoutId);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"loadingscreen\">\r\n      <span ref={titleRef} className=\"title\">\r\n        This is\r\n      </span>\r\n      <span ref={titleRef} className=\"title\">\r\n        a long\r\n      </span>\r\n      <span ref={titleRef} className=\"title\">\r\n        long title\r\n      </span>\r\n      <span ref={buttonRef} className=\"button\">\r\n        Enter\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loadingscreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}