{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramda\\\\Documents\\\\Projects\\\\rakugaki\\\\rakugaki_app\\\\src\\\\Components\\\\loadingscreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Loadingscreen() {\n  _s();\n  const titleRef = useRef(null);\n  useEffect(() => {\n    const titleLetters = titleRef.current.children;\n\n    // Add CSS classes to animate letters\n    titleRef.current.classList.add(\"animate\");\n\n    // Remove CSS classes to reset animation\n    function handleAnimationEnd() {\n      titleRef.current.classList.remove(\"animate\");\n      void titleRef.current.offsetWidth; // Force a reflow to restart the animation\n      titleRef.current.classList.add(\"animate\");\n    }\n\n    // Set up event listeners\n    titleRef.current.addEventListener(\"animationend\", handleAnimationEnd);\n\n    // Clean up event listeners\n    return () => {\n      titleRef.current.removeEventListener(\"animationend\", handleAnimationEnd);\n    };\n  }, []);\n  function animateLoading() {\n    document.getElementById(\"loadingscreen\").style.transform = \"translateX(-200vw)\";\n  }\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      animateLoading();\n    }, 2000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loadingscreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ref: titleRef,\n      className: \"title\",\n      children: \"This is\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: titleRef,\n      className: \"title\",\n      children: \"a long\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: titleRef,\n      className: \"title\",\n      children: \"long title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Loadingscreen, \"VJHHP14Wh+g1xSC7tsWy0YNlwQo=\");\n_c = Loadingscreen;\nexport default Loadingscreen;\nvar _c;\n$RefreshReg$(_c, \"Loadingscreen\");","map":{"version":3,"names":["React","useEffect","useRef","Loadingscreen","titleRef","titleLetters","current","children","classList","add","handleAnimationEnd","remove","offsetWidth","addEventListener","removeEventListener","animateLoading","document","getElementById","style","transform","intervalId","setInterval","clearInterval"],"sources":["C:/Users/ramda/Documents/Projects/rakugaki/rakugaki_app/src/Components/loadingscreen.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nfunction Loadingscreen() {\r\n  const titleRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const titleLetters = titleRef.current.children;\r\n\r\n    // Add CSS classes to animate letters\r\n    titleRef.current.classList.add(\"animate\");\r\n\r\n    // Remove CSS classes to reset animation\r\n    function handleAnimationEnd() {\r\n      titleRef.current.classList.remove(\"animate\");\r\n      void titleRef.current.offsetWidth; // Force a reflow to restart the animation\r\n      titleRef.current.classList.add(\"animate\");\r\n    }\r\n\r\n    // Set up event listeners\r\n    titleRef.current.addEventListener(\"animationend\", handleAnimationEnd);\r\n\r\n    // Clean up event listeners\r\n    return () => {\r\n      titleRef.current.removeEventListener(\"animationend\", handleAnimationEnd);\r\n    };\r\n  }, []);\r\n\r\n  function animateLoading() {\r\n    document.getElementById(\"loadingscreen\").style.transform =\r\n      \"translateX(-200vw)\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      animateLoading();\r\n    }, 2000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"loadingscreen\">\r\n      <span ref={titleRef} className=\"title\">\r\n        This is\r\n      </span>\r\n      <span ref={titleRef} className=\"title\">\r\n        a long\r\n      </span>\r\n      <span ref={titleRef} className=\"title\">\r\n        long title\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loadingscreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAEjD,SAASC,aAAa,GAAG;EAAA;EACvB,MAAMC,QAAQ,GAAGF,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMI,YAAY,GAAGD,QAAQ,CAACE,OAAO,CAACC,QAAQ;;IAE9C;IACAH,QAAQ,CAACE,OAAO,CAACE,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;;IAEzC;IACA,SAASC,kBAAkB,GAAG;MAC5BN,QAAQ,CAACE,OAAO,CAACE,SAAS,CAACG,MAAM,CAAC,SAAS,CAAC;MAC5C,KAAKP,QAAQ,CAACE,OAAO,CAACM,WAAW,CAAC,CAAC;MACnCR,QAAQ,CAACE,OAAO,CAACE,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;IAC3C;;IAEA;IACAL,QAAQ,CAACE,OAAO,CAACO,gBAAgB,CAAC,cAAc,EAAEH,kBAAkB,CAAC;;IAErE;IACA,OAAO,MAAM;MACXN,QAAQ,CAACE,OAAO,CAACQ,mBAAmB,CAAC,cAAc,EAAEJ,kBAAkB,CAAC;IAC1E,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,SAASK,cAAc,GAAG;IACxBC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACC,KAAK,CAACC,SAAS,GACtD,oBAAoB;EACxB;EAEAlB,SAAS,CAAC,MAAM;IACd,MAAMmB,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCN,cAAc,EAAE;IAClB,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMO,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,EAAE,EAAC,eAAe;IAAA,wBACrB;MAAM,GAAG,EAAEhB,QAAS;MAAC,SAAS,EAAC,OAAO;MAAA,UAAC;IAEvC;MAAA;MAAA;MAAA;IAAA,QAAO,eACP;MAAM,GAAG,EAAEA,QAAS;MAAC,SAAS,EAAC,OAAO;MAAA,UAAC;IAEvC;MAAA;MAAA;MAAA;IAAA,QAAO,eACP;MAAM,GAAG,EAAEA,QAAS;MAAC,SAAS,EAAC,OAAO;MAAA,UAAC;IAEvC;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAlDQD,aAAa;AAAA,KAAbA,aAAa;AAoDtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}