{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramda\\\\Documents\\\\Projects\\\\rakugaki\\\\rakugaki_app\\\\src\\\\Components\\\\login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useNavigate();\n\n  // Load email and password from local storage if available\n  const [rememberMe, setRememberMe] = useState(false);\n  const [storedEmail, setStoredEmail] = useState(localStorage.getItem(\"email\") || \"\");\n  const [storedPassword, setStoredPassword] = useState(localStorage.getItem(\"password\") || \"\");\n  function handleRememberMe(event) {\n    setRememberMe(event.target.checked);\n    if (!event.target.checked) {\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"password\");\n    }\n  }\n  async function handleSubmit(event) {\n    event.preventDefault();\n    var formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"password\", password);\n    try {\n      const response = await fetch(\"http://localhost/rakugaki_server/login-register/login.php\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\"\n        },\n        body: formData\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        if (rememberMe) {\n          localStorage.setItem(\"email\", email);\n          localStorage.setItem(\"password\", password);\n        }\n        history(\"/MainApp\");\n      } else {\n        throw new Error(\"Invalid email or password.\");\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        className: \"form-control\",\n        value: email || storedEmail,\n        onChange: event => setEmail(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        className: \"form-control\",\n        value: password || storedPassword,\n        onChange: event => setPassword(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        id: \"rememberMe\",\n        checked: rememberMe,\n        onChange: handleRememberMe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"rememberMe\",\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"zowzXRD7OQvAiJyxCrsJPCrb1PM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","Login","email","setEmail","password","setPassword","error","setError","history","rememberMe","setRememberMe","storedEmail","setStoredEmail","localStorage","getItem","storedPassword","setStoredPassword","handleRememberMe","event","target","checked","removeItem","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","headers","Accept","body","ok","userData","json","setItem","JSON","stringify","Error","message","value"],"sources":["C:/Users/ramda/Documents/Projects/rakugaki/rakugaki_app/src/Components/login.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useNavigate();\r\n\r\n  // Load email and password from local storage if available\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [storedEmail, setStoredEmail] = useState(localStorage.getItem(\"email\") || \"\");\r\n  const [storedPassword, setStoredPassword] = useState(localStorage.getItem(\"password\") || \"\");\r\n\r\n  function handleRememberMe(event) {\r\n    setRememberMe(event.target.checked);\r\n    if (!event.target.checked) {\r\n      localStorage.removeItem(\"email\");\r\n      localStorage.removeItem(\"password\");\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    var formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"password\", password);\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost/rakugaki_server/login-register/login.php\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n          },\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        localStorage.setItem(\"user\", JSON.stringify(userData));\r\n        if (rememberMe) {\r\n          localStorage.setItem(\"email\", email);\r\n          localStorage.setItem(\"password\", password);\r\n        }\r\n        history(\"/MainApp\");\r\n      } else {\r\n        throw new Error(\"Invalid email or password.\");\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"container\">\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          className=\"form-control\"\r\n          value={email || storedEmail}\r\n          onChange={(event) => setEmail(event.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          className=\"form-control\"\r\n          value={password || storedPassword}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group form-check\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"form-check-input\"\r\n          id=\"rememberMe\"\r\n          checked={rememberMe}\r\n          onChange={handleRememberMe}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"rememberMe\">\r\n          Remember me\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Login\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}