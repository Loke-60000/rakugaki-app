{"ast":null,"code":"function Serviceworker() {\n  const CACHE_NAME = 'my-cache-v1';\n  const urlsToCache = ['/index.html', '/asset-manifest.json', '/static/js/main.chunk.js', '/static/js/0.chunk.js', '/static/js/bundle.js', '/static/css/main.chunk.css', '/static/media/my-image.jpg', '/static/media/my-video.mp4'];\n  this.addEventListener('install', event => {\n    event.waitUntil(caches.open(CACHE_NAME).then(cache => {\n      return cache.addAll(urlsToCache);\n    }));\n  });\n  this.addEventListener('fetch', event => {\n    event.respondWith(caches.match(event.request).then(response => {\n      if (response) {\n        return response;\n      }\n      return fetch(event.request);\n    }));\n  });\n}\n_c = Serviceworker;\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js').then(registration => {\n      console.log('Service worker registered:', registration);\n    }).catch(error => {\n      console.log('Service worker registration failed:', error);\n    });\n  });\n}\nexport default Serviceworker;\nvar _c;\n$RefreshReg$(_c, \"Serviceworker\");","map":{"version":3,"names":["Serviceworker","CACHE_NAME","urlsToCache","addEventListener","event","waitUntil","caches","open","then","cache","addAll","respondWith","match","request","response","fetch","navigator","window","serviceWorker","register","registration","console","log","catch","error"],"sources":["C:/Users/ramda/Documents/Projects/rakugaki/rakugaki_app/src/pages/service-worker.js"],"sourcesContent":["function Serviceworker(){\r\n    const CACHE_NAME = 'my-cache-v1';\r\nconst urlsToCache = [\r\n'/index.html',\r\n'/asset-manifest.json',\r\n'/static/js/main.chunk.js',\r\n'/static/js/0.chunk.js',\r\n'/static/js/bundle.js',\r\n'/static/css/main.chunk.css',\r\n'/static/media/my-image.jpg',\r\n'/static/media/my-video.mp4',\r\n];\r\n\r\nthis.addEventListener('install', event => {\r\nevent.waitUntil(\r\n    caches.open(CACHE_NAME)\r\n    .then(cache => {\r\n        return cache.addAll(urlsToCache);\r\n    })\r\n);\r\n});\r\n\r\nthis.addEventListener('fetch', event => {\r\nevent.respondWith(\r\n    caches.match(event.request)\r\n    .then(response => {\r\n        if (response) {\r\n        return response;\r\n        }\r\n        return fetch(event.request);\r\n    })\r\n);\r\n});\r\n\r\n}\r\n\r\nif ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      navigator.serviceWorker.register('/service-worker.js')\r\n        .then(registration => {\r\n          console.log('Service worker registered:', registration);\r\n        })\r\n        .catch(error => {\r\n          console.log('Service worker registration failed:', error);\r\n        });\r\n    });\r\n  }\r\n\r\nexport default Serviceworker"],"mappings":"AAAA,SAASA,aAAa,GAAE;EACpB,MAAMC,UAAU,GAAG,aAAa;EACpC,MAAMC,WAAW,GAAG,CACpB,aAAa,EACb,sBAAsB,EACtB,0BAA0B,EAC1B,uBAAuB,EACvB,sBAAsB,EACtB,4BAA4B,EAC5B,4BAA4B,EAC5B,4BAA4B,CAC3B;EAED,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAEC,KAAK,IAAI;IAC1CA,KAAK,CAACC,SAAS,CACXC,MAAM,CAACC,IAAI,CAACN,UAAU,CAAC,CACtBO,IAAI,CAACC,KAAK,IAAI;MACX,OAAOA,KAAK,CAACC,MAAM,CAACR,WAAW,CAAC;IACpC,CAAC,CAAC,CACL;EACD,CAAC,CAAC;EAEF,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAEC,KAAK,IAAI;IACxCA,KAAK,CAACO,WAAW,CACbL,MAAM,CAACM,KAAK,CAACR,KAAK,CAACS,OAAO,CAAC,CAC1BL,IAAI,CAACM,QAAQ,IAAI;MACd,IAAIA,QAAQ,EAAE;QACd,OAAOA,QAAQ;MACf;MACA,OAAOC,KAAK,CAACX,KAAK,CAACS,OAAO,CAAC;IAC/B,CAAC,CAAC,CACL;EACD,CAAC,CAAC;AAEF;AAAC,KAlCQb,aAAa;AAoCtB,IAAI,eAAe,IAAIgB,SAAS,EAAE;EAC9BC,MAAM,CAACd,gBAAgB,CAAC,MAAM,EAAE,MAAM;IACpCa,SAAS,CAACE,aAAa,CAACC,QAAQ,CAAC,oBAAoB,CAAC,CACnDX,IAAI,CAACY,YAAY,IAAI;MACpBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,YAAY,CAAC;IACzD,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEE,KAAK,CAAC;IAC3D,CAAC,CAAC;EACN,CAAC,CAAC;AACJ;AAEF,eAAexB,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}