{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramda\\\\Documents\\\\Projects\\\\rakugaki\\\\rakugaki_app\\\\src\\\\Components\\\\login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const history = useNavigate();\n\n  // async function handleSubmit(event) {\n  //   event.preventDefault();\n\n  //   var formData = new FormData();\n  //   formData.append(\"email\", email);\n  //   formData.append(\"password\", password);\n  //   try {\n  //     const respons = await fetch(\n  //       \"http://localhost/rakugaki_server/login-register/login.php\",\n  //       {\n  //         method: \"POST\",\n  //         // mode: \"no-cors\",\n  //         headers: {\n  //           Accept: \"application/json\",\n  //         },\n  //         body: formData,\n  //       }\n  //     )\n  //     .then(response => response.json())\n  //     .then(response => console.log(JSON.stringify(response)));\n  //     // if (!response.ok) {\n  //     //   throw new Error(\"Invalid email or password.\");\n  //     // }\n\n  //     // Redirect to the dashboard page on successful login\n  //     history.push(\"/dashboard\");\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  // }\n  async function handleSubmit(event) {\n    event.preventDefault();\n    var formData = new FormData();\n    formData.append(\"email\", email);\n    formData.append(\"password\", password);\n    try {\n      const response = await fetch(\"http://localhost/rakugaki_server/login-register/login.php\", {\n        method: \"POST\",\n        // mode: \"no-cors\",\n        headers: {\n          Accept: \"application/json\"\n        },\n        body: formData\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        history.push(\"/dashboard\");\n      } else {\n        throw new Error(\"Invalid email or password.\");\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: event => setEmail(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"94MjQ+SB2QCOZr+jkzPrVvR7rC0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Navigate","useNavigate","Login","email","setEmail","password","setPassword","error","setError","history","handleSubmit","event","preventDefault","formData","FormData","append","response","fetch","method","headers","Accept","body","ok","userData","json","localStorage","setItem","JSON","stringify","push","Error","message","target","value"],"sources":["C:/Users/ramda/Documents/Projects/rakugaki/rakugaki_app/src/Components/login.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useNavigate();\r\n\r\n  // async function handleSubmit(event) {\r\n  //   event.preventDefault();\r\n\r\n  //   var formData = new FormData();\r\n  //   formData.append(\"email\", email);\r\n  //   formData.append(\"password\", password);\r\n  //   try {\r\n  //     const respons = await fetch(\r\n  //       \"http://localhost/rakugaki_server/login-register/login.php\",\r\n  //       {\r\n  //         method: \"POST\",\r\n  //         // mode: \"no-cors\",\r\n  //         headers: {\r\n  //           Accept: \"application/json\",\r\n  //         },\r\n  //         body: formData,\r\n  //       }\r\n  //     )\r\n  //     .then(response => response.json())\r\n  //     .then(response => console.log(JSON.stringify(response)));\r\n  //     // if (!response.ok) {\r\n  //     //   throw new Error(\"Invalid email or password.\");\r\n  //     // }\r\n\r\n  //     // Redirect to the dashboard page on successful login\r\n  //     history.push(\"/dashboard\");\r\n  //   } catch (error) {\r\n  //     setError(error.message);\r\n  //   }\r\n  // }\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n  \r\n    var formData = new FormData();\r\n    formData.append(\"email\", email);\r\n    formData.append(\"password\", password);\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost/rakugaki_server/login-register/login.php\",\r\n        {\r\n          method: \"POST\",\r\n          // mode: \"no-cors\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n          },\r\n          body: formData,\r\n        }\r\n      );\r\n  \r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        localStorage.setItem(\"user\", JSON.stringify(userData));\r\n        history.push(\"/dashboard\");\r\n      } else {\r\n        throw new Error(\"Invalid email or password.\");\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {error && <div>{error}</div>}\r\n      <label>\r\n        Email:\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(event) => setEmail(event.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\">Login</button>\r\n      <div>\r\n        \r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC;AAEzD,SAASC,KAAK,GAAG;EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,OAAO,GAAGR,WAAW,EAAE;;EAE7B;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,eAAeS,YAAY,CAACC,KAAK,EAAE;IACjCA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC7BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEZ,KAAK,CAAC;IAC/BU,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEV,QAAQ,CAAC;IACrC,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2DAA2D,EAC3D;QACEC,MAAM,EAAE,MAAM;QACd;QACAC,OAAO,EAAE;UACPC,MAAM,EAAE;QACV,CAAC;QACDC,IAAI,EAAER;MACR,CAAC,CACF;MAED,IAAIG,QAAQ,CAACM,EAAE,EAAE;QACf,MAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;QACtCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;QACtDd,OAAO,CAACoB,IAAI,CAAC,YAAY,CAAC;MAC5B,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACwB,OAAO,CAAC;IACzB;EACF;EAKA,oBACE;IAAM,QAAQ,EAAErB,YAAa;IAAA,WAC1BH,KAAK,iBAAI;MAAA,UAAMA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eAC5B;MAAA,WAAO,QAEL;QACE,IAAI,EAAC,OAAO;QACZ,KAAK,EAAEJ,KAAM;QACb,QAAQ,EAAGQ,KAAK,IAAKP,QAAQ,CAACO,KAAK,CAACqB,MAAM,CAACC,KAAK,CAAE;QAClD,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAO,WAEL;QACE,IAAI,EAAC,UAAU;QACf,KAAK,EAAE5B,QAAS;QAChB,QAAQ,EAAGM,KAAK,IAAKL,WAAW,CAACK,KAAK,CAACqB,MAAM,CAACC,KAAK,CAAE;QACrD,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACpC;MAAA;MAAA;MAAA;IAAA,QAEM;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,GAnGQ/B,KAAK;EAAA,QAIID,WAAW;AAAA;AAAA,KAJpBC,KAAK;AAqGd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}